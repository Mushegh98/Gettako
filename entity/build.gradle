plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion compileVersion
    buildToolsVersion buildVersion

    defaultConfig {
        minSdkVersion minVersion
        targetSdkVersion targetVersion
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    //testing
    testImplementation supportDependencies.junit
    androidTestImplementation supportDependencies.junitAndroid
    androidTestImplementation supportDependencies.espressoCore

    //optional - Kotlin Extensions and Coroutines support for Room
    implementation supportDependencies.roomWithCoroutines

    //koin
    implementation supportDependencies.koinAndroid

    //retrofit
    implementation supportDependencies.retrofitConverterGson

    //okhttp
    implementation supportDependencies.squareupOkhttp
    implementation supportDependencies.squareupOkhttpLoggingInterceptor

    //room
    implementation supportDependencies.roomRuntime
    kapt supportDependencies.roomCompiler

    implementation supportDependencies.appcompat
    implementation supportDependencies.coreKtx
//    implementation supportDependencies.gmsPlayServicesMaps
    implementation supportDependencies.legacySupport
    implementation supportDependencies.gson
//    implementation supportDependencies.androidLibrariesMaps
//    implementation supportDependencies.JWT
    implementation supportDependencies.material
    implementation supportDependencies.kotlinxSerialization
}